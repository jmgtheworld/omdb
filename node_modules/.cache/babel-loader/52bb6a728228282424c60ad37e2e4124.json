{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/minjo/lighthouse/shopify_frontend/omdb/src/components/Nominations.js\";\nimport NominateItem from \"./NominateItem\";\nimport '../application.css';\nexport default function Nominations(props) {\n  const {\n    list,\n    onClick,\n    disabled,\n    handleButton\n  } = props;\n\n  if (list) {\n    return list.map(movie => {\n      const id = movie.imdbID;\n      return /*#__PURE__*/_jsxDEV(NominateItem, { ...movie,\n        onClick: onClick,\n        disabled: disabled.includes(id),\n        handleButton: handleButton\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 14\n      }, this);\n    });\n  } else {\n    return /*#__PURE__*/_jsxDEV(NominateItem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n}\n_c = Nominations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nominations\");","map":{"version":3,"sources":["/Users/minjo/lighthouse/shopify_frontend/omdb/src/components/Nominations.js"],"names":["NominateItem","Nominations","props","list","onClick","disabled","handleButton","map","movie","id","imdbID","includes"],"mappings":";;AACA,OAAOA,YAAP,MAAyB,gBAAzB;AAEA,OAAO,oBAAP;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAEzC,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,MAA0CJ,KAAhD;;AAEA,MAAIC,IAAJ,EAAU;AACR,WAAOA,IAAI,CAACI,GAAL,CAASC,KAAK,IAAI;AACvB,YAAMC,EAAE,GAAGD,KAAK,CAACE,MAAjB;AACA,0BAAO,QAAC,YAAD,OAAuCF,KAAvC;AAA8C,QAAA,OAAO,EAAIJ,OAAzD;AAAkE,QAAA,QAAQ,EAAIC,QAAQ,CAACM,QAAT,CAAkBF,EAAlB,CAA9E;AAAqG,QAAA,YAAY,EAAIH;AAArH,SAAqBE,KAAK,CAACE,MAA3B;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAHM,CAAP;AAID,GALD,MAMK;AACH,wBACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAID;AACF;KAhBuBT,W","sourcesContent":["\nimport NominateItem from \"./NominateItem\";\n\nimport '../application.css'\n\nexport default function Nominations(props) {\n\n  const {list, onClick, disabled, handleButton} = props;\n\n  if (list) {\n    return list.map(movie => {\n      const id = movie.imdbID\n      return <NominateItem key = {movie.imdbID} {...movie} onClick = {onClick} disabled = {disabled.includes(id)} handleButton = {handleButton}/>\n    })\n  }\n  else {\n    return (\n      <NominateItem />\n    )\n\n  }\n}"]},"metadata":{},"sourceType":"module"}