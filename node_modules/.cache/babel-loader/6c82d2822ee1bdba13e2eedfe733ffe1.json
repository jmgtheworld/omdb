{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/minjo/lighthouse/shopify_frontend/omdb/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport SearchBar from \"./SearchBar\";\nimport Nominations from \"./Nominations\";\nimport Results from \"./Results\";\nimport NominationPage from \"./NominationPage\";\nimport Header from \"./Header\";\n\nconst axios = require('axios');\n\nexport default function Search(props) {\n  _s();\n\n  const [term, setTerm] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [list, setList] = useState([{\n    Title: \"The Office\",\n    Year: \"2005-2013\",\n    imdbID: \"tt0386676\",\n    Poster: \"https://m.media-amazon.com/images/M/MV5BMDNkOTE4NDQtMTNmYi00MWE0LWE4ZTktYTc0NzhhNWIzNzJiXkEyXkFqcGdeQXVyMzQ2MDI5NjU@._V1_SX300.jpg\"\n  }]);\n  useEffect(() => {\n    setLoading(true);\n    const URL = `http://www.omdbapi.com/?s=${term}&apikey=3e4a628c&`;\n    axios.get(URL).then(response => {\n      setResults(response.data);\n      setLoading(false);\n    });\n  }, [term]);\n\n  const showResult = term => {\n    if (term) {\n      return /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"results\",\n        children: [\" Results for \\\"\", term, \"\\\" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const addNomination = (name, year, id, image) => {\n    const movie = {\n      Title: name,\n      Year: year,\n      imdbID: id,\n      Poster: image,\n      State: false\n    };\n    const newList = list.concat(movie);\n    setList(newList);\n  };\n\n  const removeNomination = name => {\n    const newList = list.filter(movie => movie.Title !== name);\n    setList(newList);\n  };\n\n  const showBanner = () => {\n    if (list.length >= 5) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-primary banner\",\n        role: \"alert\",\n        children: [\"You now have \", list.length, \" nominations\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const generate = () => {\n    let result = \"\";\n    let char = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (let i = 0; i < 6; i++) {\n      result += char.charAt(Math.floor(Math.random() * char.length));\n    }\n\n    return result;\n  };\n\n  const {\n    name\n  } = props;\n  const [disabledButtons, setDisabledButtons] = useState([false]);\n\n  const handleButton = id => {\n    setDisabledButtons(prev => [...prev, id]);\n  };\n\n  const toggleOn = id => {\n    let disabledButtonsCopy = disabledButtons;\n    disabledButtonsCopy = disabledButtonsCopy.filter(item => item !== id);\n    setDisabledButtons(disabledButtonsCopy);\n    console.log('toggleonButton cliked');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/nominations\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          generate: generate(),\n          name: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mainContent_nominations\",\n          children: /*#__PURE__*/_jsxDEV(NominationPage, {\n            list: list\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n            onSearch: term => setTerm(term),\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this), showBanner(), showResult(term), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mainContent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mainContent_results\",\n              children: /*#__PURE__*/_jsxDEV(Results, {\n                results: results,\n                onClick: addNomination,\n                disabled: disabledButtons,\n                handleButton: handleButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mainContent_nominations\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"trophy.svg\",\n                className: \"nomainateImage\",\n                alt: \"trophy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"nominations\",\n                children: \" Nominations \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/nominations\",\n                className: \"btn btn-outline-info share\",\n                children: \" Share \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Nominations, {\n                list: list,\n                onClick: removeNomination,\n                disabled: disabledButtons,\n                handleButton: toggleOn\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"Q1nLbBaZga+ZqrIWv1KIwLjpbVw=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/minjo/lighthouse/shopify_frontend/omdb/src/components/Search.js"],"names":["Fragment","useEffect","useState","BrowserRouter","Router","Switch","Route","Link","SearchBar","Nominations","Results","NominationPage","Header","axios","require","Search","props","term","setTerm","results","setResults","loading","setLoading","list","setList","Title","Year","imdbID","Poster","URL","get","then","response","data","showResult","addNomination","name","year","id","image","movie","State","newList","concat","removeNomination","filter","showBanner","length","generate","result","char","i","charAt","Math","floor","random","disabledButtons","setDisabledButtons","handleButton","prev","toggleOn","disabledButtonsCopy","item","console","log"],"mappings":"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","sourcesContent":["import {Fragment, useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport SearchBar from \"./SearchBar\";\nimport Nominations from \"./Nominations\";\nimport Results from \"./Results\";\nimport NominationPage from \"./NominationPage\";\nimport Header from \"./Header\";\n\nconst axios = require('axios');\n\nexport default function Search (props) {\n  const [term, setTerm] = useState(\"\");\n  const [results, setResults] = useState([]);\n \n  const [loading, setLoading] = useState(false);\n\n  const [list, setList] = useState([{Title: \"The Office\", Year: \"2005-2013\", imdbID: \"tt0386676\", Poster: \"https://m.media-amazon.com/images/M/MV5BMDNkOTE4NDQtMTNmYi00MWE0LWE4ZTktYTc0NzhhNWIzNzJiXkEyXkFqcGdeQXVyMzQ2MDI5NjU@._V1_SX300.jpg\"}]);\n\n  useEffect (() => {\n    setLoading(true)\n    const URL = `http://www.omdbapi.com/?s=${term}&apikey=3e4a628c&`\n    axios.get(URL)\n    .then(response => {\n      setResults(response.data)\n      setLoading(false)\n    })\n  }, [term])\n\n  const showResult = term => {\n    if (term) {\n      return <h5 className = \"results\"> Results for \"{term}\" </h5>\n    }\n  }\n\n  const addNomination = (name,  year, id, image)=> {\n    const movie = {Title: name, Year: year, imdbID: id, Poster: image, State: false}\n    const newList = list.concat(movie)\n    setList(newList)\n  }\n\n  const removeNomination = name => {\n    const newList = list.filter(movie => movie.Title !== name)\n    setList(newList)\n  }\n\n  const showBanner = () => {\n    if (list.length >= 5) {\n      return (\n        <div className=\"alert alert-primary banner\" role=\"alert\">\n          You now have {list.length} nominations\n        </div>\n      )\n    }\n  }\n\n  const generate = () => {\n    let result = \"\";\n    let char = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    for (let i = 0; i < 6; i++) {\n      result += char.charAt(Math.floor(Math.random() * char.length));\n    }\n    return result\n  }\n\n  const {name} = props;\n\n  const [disabledButtons, setDisabledButtons] = useState([false]);\n\n  const handleButton = (id) => {\n    setDisabledButtons(prev => [...prev, id]);\n  }\n\n  const toggleOn = id => {\n    let disabledButtonsCopy = disabledButtons;\n    disabledButtonsCopy = disabledButtonsCopy.filter(item => item!== id)\n    setDisabledButtons(disabledButtonsCopy)\n    console.log('toggleonButton cliked')\n  }\n  \n  return (\n    <Router>\n      <Switch>\n        <Route path = \"/nominations\">\n          <Header generate = {generate()} name = {name} />\n          <div className = \"mainContent_nominations\">\n            <NominationPage list = {list} />\n          </div>\n        </Route>\n        <Route path = \"/\">\n        <Fragment>\n          <SearchBar onSearch = {term => setTerm(term)} loading ={loading} />\n            {showBanner()}\n            {showResult(term)}\n            <div className = \"mainContent\">\n            <div className = \"mainContent_results\">\n            <Results results = {results} onClick = {addNomination} disabled = {disabledButtons} handleButton = {handleButton}/>\n            </div>\n            <div className = \"mainContent_nominations\">\n              <img src = \"trophy.svg\" className = \"nomainateImage\" alt = \"trophy\"/>\n              <span className = \"nominations\" > Nominations </span>\n              <Link to = \"/nominations\" className =\"btn btn-outline-info share\"> Share </Link>\n            <Nominations list = {list} onClick = {removeNomination} disabled = {disabledButtons} handleButton = {toggleOn}/>\n              </div>\n            </div>\n          </Fragment>\n        </Route>\n      </Switch>\n    </Router>\n\n  )\n}"]},"metadata":{},"sourceType":"module"}